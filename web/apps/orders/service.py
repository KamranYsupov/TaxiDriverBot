from typing import List

from asgiref.sync import sync_to_async
from django.conf import settings
from django.db.models import Q

from web.services.telegram import async_telegram_service
from web.apps.telegram_users.models import TaxiDriver, TelegramUser
from web.apps.orders.models import Order, OrderType


async def async_send_order_to_active_drivers(order_id: Order.id):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞—Å–∏–Ω—Ö–æ–Ω–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞ –≤—Å–µ–º –∞–∫—Ç–∏–≤–Ω—ã–º –≤–æ–¥–∏—Ç–µ–ª—è–º"""

    order: Order = await Order.objects.aget(id=order_id)
    order_telegram_user: TelegramUser = await TelegramUser.objects.aget(id=order.telegram_user_id)

    active_drivers = (
        await sync_to_async(TaxiDriver.objects.filter)(
            ~Q(telegram_id=order_telegram_user.telegram_id),
            is_active=True
        )
    )

    order_type = '–¢–∞–∫—Å–∏ üöï' if order.type == OrderType.TAXI else '–î–æ—Å—Ç–∞–≤–∫–∞ üì¶'
    order_message = (
        '–ü–æ—Å—Ç—É–ø–∏–ª –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑!\n\n'
        f'<b>–¢–∏–ø:</b> <em>{order_type}</em>\n'
        f'<b>–û—Ç–∫—É–¥–∞:</b> <em>{order.from_address}</em>\n'
        f'<b>–ö—É–¥–∞:</b> <em>{order.to_address}</em>\n\n'
        f'<b>C—Ç–æ–∏–º–æ—Å—Ç—å:</b> <em>{order.price} —Ä—É–±.</em>\n'
    )

    if not await active_drivers.aexists():
        inline_keyboard = [[
            {'text': '–í–∑—è—Ç—å ‚úÖ', 'url': f'{settings.BOT_LINK}?start={order.id}'},
        ]]

        await async_telegram_service.send_message(
            chat_id=settings.PRIVATE_ORDERS_CHANNEL_ID,
            text=order_message,
            reply_markup={'inline_keyboard': inline_keyboard}
        )

        return

    async for taxi_driver in active_drivers:
        inline_keyboard = [[
            {'text': '–í–∑—è—Ç—å ‚úÖ', 'callback_data': f'take_order_{order.id}'},
            {'text': '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å ‚ùå', 'callback_data': f'miss_order_{order.id}'}
        ]]

        await async_telegram_service.send_message(
            chat_id=taxi_driver.telegram_id,
            text=order_message,
            reply_markup={'inline_keyboard': inline_keyboard}
        )


